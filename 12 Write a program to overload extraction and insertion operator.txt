Aim : Write a program to overload extraction and insertion operator

#include <iostream>

using namespace std;

class Complex{
private:
    int real;
    int img;
public:
    Complex(){
        this->real = 0;
        this->img = 0;
    }
    Complex(int r,int i){
        this->real = r;
        this->img = i;
    }
    Complex(Complex &c){
        this->real = c.real;
        this->img = c.img;
    }
    friend ostream & operator<<(ostream &o,Complex &c);
    friend istream & operator>>(istream &i,Complex &c);
    Complex operator+(Complex c){
        Complex temp;
        temp.real = real+c.real;
        temp.img = img+c.img;
        return temp;
    }
    Complex operator-(Complex c){
        Complex temp;
        temp.real = real-c.real;
        temp.img = img-c.img;
        return temp;
    }
};

ostream & operator<<(ostream &o,Complex &c){
    o<<c.real<<" + "<<c.img<<"i"<<endl;
    return o;
}

istream & operator>>(istream &i,Complex &c){
    cout<<"Enter Real value"<<endl;
    i>>c.real;
    cout<<"Enter Imaginary value"<<endl;
    i>>c.img;
    return i;
}

int main()
{
    Complex c1,c2,c3;
    cin>>c1;
    cin>>c2;
    c3=c1+c2;
    cout<<c3;
    return 0;
}
